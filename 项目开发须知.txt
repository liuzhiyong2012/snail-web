
templated代码规范。
<template>
	<section class="main-ctn">
		<section class="header-ctn">
			
		</section>
		<section class="content-ctn">
			顺序:1.指令。2.静态的id,class,style,其他  3.变量属性：id,class,style  4，原生事件，自定义事件
			     2.id使用驼峰命名，class使用中划线进行连接。
				   id:前缀(一般组件的根元素采用)-功能-元素类型   dishMainCtn 
				   class命名规则：前缀(一般组件的根元素采用)-功能-元素类型： dish-main-ctn 
				   状态等参考boostrap命名规则。
				 
			<plugin-test 指令 v-show=""  静态属性 pro1="pro1" 变量属性 :var1="var1" @click="" @emit="">
			</plugin-test>
		</section>
		<section class="footer-ctn">
			
		</section>
	</section>
</template>	

1.js模板代码:
<script>
    import的顺序：css样式,图片,不带括号的npm包,带括号的npm包,平台级组件，模块级别的组件
	import "ol/ol.css";
	import TileLayer from "ol/layer/Tile";
	import {Component,Prop,Vue} from 'vue-property-decorator';
	import { Map, View } from "ol";
	
	import OSM from "ol/source/OSM";
	
	
	import  FlightService from '../../../service/flight';
	
    路径全部用相对路径，因为有些编辑器对@这些路径无法跳转
	
	import HomeParter from "./components/HomeParter";
	//vue属性以及方法顺序如下
	export default {
		name: "HomePage",
		components: {
			HomeBanner
		},
		props:{
			
		},
		data() {
			return {
				
			}
		},
		computed:{
			
		},
		watch:{
			
		},
		created() {
			
		},
		mounted(){
			
		},
		destroyed(){
			
		},
		methods: {
			
		}
	}
</script>

style模板代码：
//样式按照容器盒子从外到内的原则
//样式命名规则
container:ctn

input:input
button:btn

<style lang="less" scoped>
	.homepage-ctn{
		cursor:'';
		display:'';
		position:'';
		left:'';
		top:'';
		right:'';
		bottom:'';
		float:'';
		clear:'';
		border:'';
		margin:'';
		padding:'';
		width:'';
		height:'';
		文本属性：
		文字属性：
		背景属性：
		css3新属性：
	}
	
</style>


1.每人需要在本地建自己名字缩写的分支
如:development_lzy
每次开发完一个功能模块后合并到development分支,并推送


代码规范:
1.每个功能在views下新建一个模块：模块下需要有自己的components和imgs,用来放置本模块的组件和静态资源。
2.文件夹名以及文件名都是小写:
3.公用的组件放在src目录下的component。
4.公用样式以abus作为前缀开头。


文件夹以及文件命名规范：
1.文件夹小写加下划线  e.g:node_modules
2.vue文件单词首字母大溪地 e.g:HomeIndex.vue
3.ts文件 小写加中划线    e.g:shims-vue.d
4.scss:小写加下滑划线    hello_index.scss
5.图片:小写加下滑划线     hello_index.png